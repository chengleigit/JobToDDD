// <auto-generated />
using System;
using JobToDD.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;

namespace JobToDD.EntityFramework.Migrations
{
    [DbContext(typeof(JobToDDDDbContext))]
    [Migration("20210916140321_seedData")]
    partial class seedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JobToDDD.Domain.JobInfio.City", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AdministrativeLevel")
                        .HasColumnType("int");

                    b.Property<string>("CityNme")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("JobToDDD.Domain.JobInfio.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyIntroduce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanySize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("JobToDDD.Domain.JobInfio.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<Guid?>("CityId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<Guid?>("CompanyId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("JobPay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PublishTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Welfare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkExperience")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId1");

                    b.HasIndex("CompanyId1");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("JobToDDD.Domain.JobInfio.Requirement", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Requirement");
                });

            modelBuilder.Entity("JobToDDD.Domain.JobInfio.Job", b =>
                {
                    b.HasOne("JobToDDD.Domain.JobInfio.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId1");

                    b.HasOne("JobToDDD.Domain.JobInfio.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId1");

                    b.Navigation("City");

                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
